---
template:
  train: >
     /opt/compiler/gcc-8.2/lib/ld-linux-x86-64.so.2 
     --library-path {lib}
      {py} {rootdir}/generate.py
      --arch {arch} 
      --dataset {dataset} 
      --train-steps {train-steps}
      --batch-size {batch-size} 
      --optim {optim}
      --lr {lr}
      --lr-decay-rate {lr-decay-rate}
      --lr-decay-freq {lr-decay-freq} 
      --weight-decay {weight-decay}
      --momentum {momentum}
      --pgd-radius {pgd-radius} 
      --pgd-steps {pgd-steps} 
      --pgd-step-size {pgd-step-size} 
      [pgd-random-start]
      --atk-pgd-radius {atk-pgd-radius} 
      --atk-pgd-steps {atk-pgd-steps} 
      --atk-pgd-step-size {atk-pgd-step-size}
      [atk-pgd-random-start]
      --samp-num {samp-num} 
      --report-freq {report-freq} 
      --save-freq {save-freq} 
      --data-dir {data-dir} 
      --save-dir {_output}
      --save-name {save-name}
      [parallel]
      --attacker {attacker_type}
  test: >
      /opt/compiler/gcc-8.2/lib/ld-linux-x86-64.so.2 
      --library-path {lib}
      {py} {rootdir}/train.py
      --arch  {arch}
      --dataset {dataset}
      --train-steps  {train-steps-evaluation}
      --batch-size {batch-size-evaluation}
      --optim {optim} 
      --lr {lr-evaluation} 
      --lr-decay-rate {lr-decay-rate-evaluation} 
      --lr-decay-freq  {lr-decay-freq}
      --weight-decay {weight-decay-evaluation}
      --momentum {momentum-eval}
      --pgd-radius {atk-pgd-radius} 
      --pgd-steps {pgd-steps} 
      --pgd-step-size {pgd-step-size-eval}
      --report-freq {report-freq-eval} 
      --save-freq {save-freq-eval} 
      --noise-path {_output}/{save-name}-fin-def-noise.pkl 
      --data-dir {data-dir} 
      --save-dir {_output} 
      --save-name {save-name-eval}
      [parallel]

default:
  save-name-eval: REM_baseline_eval
  save-name: REM_baseline
  arch: resnet18
  dataset: cifar10
  batch-size: 128
  optim: sgd
  lr: 0.1
  lr-decay-rate: 0.1
  lr-decay-freq: 2000
  weight-decay: 5e-4
  momentum: 0.9
  pgd-radius: 8
  pgd-steps: 10
  pgd-step-size: 1.6
  pgd-random-start: True
  atk-pgd-radius: 4
  atk-pgd-steps: 10
  atk-pgd-step-size: 0.8
  atk-pgd-random-start: True
  samp-num: 5
  report-freq: 1000
  save-freq: 1000
  data-dir: ~/dataset/
  train-steps-evaluation: 40000
  batch-size-evaluation: 128
  lr-evaluation: 0.1
  lr-decay-rate-evaluation: 0.1
  lr-decay-freq-evaluation: 16000
  weight-decay-evaluation: 5e-4
  momentum-eval: 0.9
  pgd-step-size-eval: 0.8
  report-freq-eval: 1000
  save-freq-eval: 100000
  lib: /opt/compiler/gcc-8.2/lib:/usr/lib64:/ssd2/liuyixin04/miniconda3/envs/py37_paddle/lib:/home/work/cuda-10.0/lib64/:/home/work/cudnn_v7.4/cuda/lib64/:/ssd2/liuyixin04/.jumbo/lib
  py: /ssd2/liuyixin04/miniconda3/envs/py37_torch/bin/python
  rootdir: /ssd2/liuyixin04/workspace/yixin-library/project/robust_noise
resource: [ 0,1,2,3,4,5,6,7 ]

---
parallel: [True]
attacker_type: [pgd]
train-steps: [ 5000, 6000, 7000, 8000, 10000]
